}
all_sums <- all_sums + pathway
}
for (i in 1:1000){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
all_sums <- matrix(0, nrow = 9, ncol = 73)
#creating progress list
probab <- 1/nrow(pathway)
for (i in 1:100){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
all_sums <- all_sums/100
#Converting values to numeric
pathway <- apply(pathway, 1, as.numeric); colnames(pathway) <- c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"); rownames(pathway) <- paste("T-", 0:8, sep = "");
all_sums1 <- all_sums
all_sums1 <- all_sums1 |>
janitor::clean_names() |> #Tibble dont take same previous colnames to have to clear them and make them unique
tibble::rownames_to_column("Sample")
melt <- reshape2::melt(all_sums1, ids = "Sample")
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2)
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point()
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point(aes(x = variable, y = value))
all_sums <- matrix(0, nrow = 9, ncol = 73)
for (i in 1:200){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
all_sums <- all_sums/100
all_sums1 <- all_sums
all_sums1 <- all_sums1 |>
janitor::clean_names() |> #Tibble dont take same previous colnames to have to clear them and make them unique
tibble::rownames_to_column("Sample")
melt <- reshape2::melt(all_sums1, ids = "Sample")
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point(aes(x = variable, y = value))
all_sums <- all_sums/500
all_sums1 <- all_sums
all_sums1 <- all_sums1 |>
janitor::clean_names() |> #Tibble dont take same previous colnames to have to clear them and make them unique
tibble::rownames_to_column("Sample")
melt <- reshape2::melt(all_sums1, ids = "Sample")
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point(aes(x = variable, y = value))
#creating progress list
probab <- 1/nrow(pathway)
all_sums <- matrix(0, nrow = 9, ncol = 73)
for (i in 1:200){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
all_sums <- all_sums/200
all_sums1 <- all_sums
all_sums1 <- all_sums1 |>
janitor::clean_names() |> #Tibble dont take same previous colnames to have to clear them and make them unique
tibble::rownames_to_column("Sample")
melt <- reshape2::melt(all_sums1, ids = "Sample")
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point(aes(x = variable, y = value))
for (i in 1:500){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
all_sums <- matrix(0, nrow = 9, ncol = 73)
for (i in 1:500){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
all_sums <- all_sums/500
all_sums1 <- all_sums
all_sums1 <- all_sums1 |>
janitor::clean_names() |> #Tibble dont take same previous colnames to have to clear them and make them unique
tibble::rownames_to_column("Sample")
melt <- reshape2::melt(all_sums1, ids = "Sample")
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point(aes(x = variable, y = value))
#creating progress list
probab <- 1/nrow(pathway)
all_sums <- matrix(0, nrow = 9, ncol = 73)
for (i in 1:500){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
View(all_sums)
source("/Users/tanishkpatodi/Desktop/Function_for_LineGraphs.R")
#creating progress list
probab <- 1/nrow(pathway)
all_sums <- matrix(0, nrow = 9, ncol = 73)
for (i in 1:500){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
all_sums <- matrix(0, nrow = 9, ncol = 73)
for (i in 1:100){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
all_sums <- all_sums/100
all_sums1 <- all_sums
all_sums1 <- all_sums1 |>
janitor::clean_names() |> #Tibble dont take same previous colnames to have to clear them and make them unique
tibble::rownames_to_column("Sample")
melt <- reshape2::melt(all_sums1, ids = "Sample")
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point(aes(x = variable, y = value))
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point(aes(x = variable, y = value, shape = Sample))
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point(aes(x = variable, y = value))
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
View(pathway)
#creating progress list
probab <- 1/nrow(pathway)
all_sums <- matrix(0, nrow = 9, ncol = 73)
for (i in 1:100){
progress.list <- c()
pathway <- data.frame(row.names = c("GF", "RTK", "RAS", "PI3K", "RAF", "PIP3", "MEK/ERK", "AKT", "TF"),
t = c( 1, 0, 0, 0, 0, 0, 0, 0, 0))
#Running the function till all active
while(sum(pathway[, ncol(pathway)]) != 9){
GF()
}
all_sums <- all_sums + pathway
}
#Line graphs
all_sums <- all_sums/100
all_sums1 <- all_sums
all_sums1 <- all_sums1 |>
janitor::clean_names() |> #Tibble dont take same previous colnames to have to clear them and make them unique
tibble::rownames_to_column("Sample")
melt <- reshape2::melt(all_sums1, ids = "Sample")
ggplot(melt) +
geom_line(aes(x = variable, y = value, group = Sample, color = Sample), show.legend = T, linewidth = 2) +
geom_point(aes(x = variable, y = value))
r <- sample(list, 1)
func <- c(GF(), RAS())
func <- c(GF(), RAS())
func <- c(GF, RAS)
a <- func[1]
View(a)
a <- func[1]
a()
setwd('./Project/VScode/NetworkModelling/')
df <- read.csv("./DA.csv", header = T, row.names = T)
df <- read.csv("./DA.csv", header = T)
View(df)
rownames(df) <- df[,1]
df <- df[,-1]
colnames(df) <- rownames(df)
df$Sum <- rowsum(df)
?rowsum
df$Sum <- rowSums(df)
df <- df[,5]
df <- as.data.frame(df)
df <- read.csv("./DA.csv", header = T)
rownames(df) <- df[,1]
df <- df[,-1]
colnames(df) <- rownames(df)
df$Sum <- rowSums(df)
df1 <- df[,5]
df1 <- as.data.frame(df)
View(df1)
df1 <- df[,5]
df1 <- as.data.frame(df)
df1 <- df[,5]
df1 <- as.data.frame(df1)
rownames(df1) <- rownames(df)
barplot(df1)
library(ggplot2)
melt <- reshape2::melt(df1)
View(melt)
melt$variable <- rownames(df)
ggplot(melt, aes(x = variable, y = value, fill = variable))
ggplot(melt, aes(x = variable, y = value, fill = variable)) +
geom_bar()
ggplot(melt, aes(x = factor(variable), y = value, fill = variable)) +
geom_bar()
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar()
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')+
theme(panel.grid = element_blank(),
legend.title = element_blank(),
panel.background = element_blank(),aspect.ratio = 0.8,
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1.2),
plot.margin = unit(c(1,3,1,1), "lines"),
axis.text.x = element_text(size = 10,face="bold"),
axis.text.y = element_text(size = 14, face = 'bold'),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = 'none')
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')+
xlab("States")+
ylab("Frequency")+
theme(panel.grid = element_blank(),
legend.title = element_blank(),
panel.background = element_blank(),aspect.ratio = 0.8,
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1.2),
plot.margin = unit(c(1,3,1,1), "lines"),
axis.text.x = element_text(size = 10,face="bold"),
axis.text.y = element_text(size = 14, face = 'bold'),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = 'none')
Sum(unlist(df)
Sum(unlist(df))
sum(unlist(df))
View(df)
df <- read.csv("./DA.csv", header = T)
rownames(df) <- df[,1]
df <- df[,-1]
colnames(df) <- rownames(df)
df$Sum <- rowSums(df)/400
df1 <- df[,5]
df1 <- as.data.frame(df1)
melt <- reshape2::melt(df1)
melt$variable <- rownames(df)
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')+
xlab("States")+
ylab("Frequency")+
theme(panel.grid = element_blank(),
legend.title = element_blank(),
panel.background = element_blank(),aspect.ratio = 0.8,
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1.2),
plot.margin = unit(c(1,3,1,1), "lines"),
axis.text.x = element_text(size = 10,face="bold"),
axis.text.y = element_text(size = 14, face = 'bold'),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = 'none')
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')+
xlab("States")+
ylab("Frequency")+
theme(panel.grid = element_blank(),
legend.title = element_blank(),
panel.background = element_blank(),aspect.ratio = 0.5,
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1.2),
plot.margin = unit(c(1,3,1,1), "lines"),
axis.text.x = element_text(size = 10,face="bold"),
axis.text.y = element_text(size = 14, face = 'bold'),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = 'none')
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')+
xlab("States")+
ylab("Frequency")+
theme(panel.grid = element_blank(),
legend.title = element_blank(),
panel.background = element_blank(),aspect.ratio = 0.9,
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1.2),
plot.margin = unit(c(1,3,1,1), "lines"),
axis.text.x = element_text(size = 10,face="bold"),
axis.text.y = element_text(size = 14, face = 'bold'),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = 'none')
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')+
xlab("States")+
ylab("Frequency")+
theme(panel.grid = element_blank(),
legend.title = element_blank(),
panel.background = element_blank(),aspect.ratio = 1,
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1.2),
plot.margin = unit(c(1,3,1,1), "lines"),
axis.text.x = element_text(size = 10,face="bold"),
axis.text.y = element_text(size = 14, face = 'bold'),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = 'none')
df <- read.csv("./TS.csv", header = T)
rownames(df) <- df[,1]
df <- df[,-1]
colnames(df) <- rownames(df)
df$Sum <- rowSums(df)/400
df1 <- df[,5]
df1 <- as.data.frame(df1)
melt <- reshape2::melt(df1)
melt$variable <- rownames(df)
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')+
xlab("States")+
ylab("Frequency")+
theme(panel.grid = element_blank(),
legend.title = element_blank(),
panel.background = element_blank(),aspect.ratio = 1,
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1.2),
plot.margin = unit(c(1,3,1,1), "lines"),
axis.text.x = element_text(size = 10,face="bold"),
axis.text.y = element_text(size = 14, face = 'bold'),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = 'none')
df <- read.csv("./TSSA.csv", header = T)
rownames(df) <- df[,1]
df <- df[,-1]
colnames(df) <- rownames(df)
df$Sum <- rowSums(df)/400
df1 <- df[,5]
df1 <- as.data.frame(df1)
melt <- reshape2::melt(df1)
melt$variable <- rownames(df)
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')+
xlab("States")+
ylab("Frequency")+
theme(panel.grid = element_blank(),
legend.title = element_blank(),
panel.background = element_blank(),aspect.ratio = 1,
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1.2),
plot.margin = unit(c(1,3,1,1), "lines"),
axis.text.x = element_text(size = 10,face="bold"),
axis.text.y = element_text(size = 14, face = 'bold'),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = 'none')
df <- read.csv("./DASA.csv", header = T)
rownames(df) <- df[,1]
df <- df[,-1]
colnames(df) <- rownames(df)
df$Sum <- rowSums(df)/400
df1 <- df[,5]
df1 <- as.data.frame(df1)
melt <- reshape2::melt(df1)
melt$variable <- rownames(df)
ggplot(melt, aes(x = variable, y = as.numeric(value), fill = variable)) +
geom_bar(stat='identity')+
xlab("States")+
ylab("Frequency")+
theme(panel.grid = element_blank(),
legend.title = element_blank(),
panel.background = element_blank(),aspect.ratio = 1,
panel.border = element_rect(colour = "black", fill = NA, linewidth = 1.2),
plot.margin = unit(c(1,3,1,1), "lines"),
axis.text.x = element_text(size = 10,face="bold"),
axis.text.y = element_text(size = 14, face = 'bold'),
axis.title.x = element_text(size = 16, face = "bold"),
axis.title.y = element_text(size = 16, face = "bold"),
legend.position = 'none')
